[
    {
        "title": "GitHub Workflow 101",
        "author": "Jeff Smith",
        "description": "About the GitHub Workflow on MacOS.",
        "blog_content": "The GitHub workflow is how developers add features to code and test them without disrupting the main branch. Instructions for MacOS terminal. Use git status in MacOS terminal to check which branch you are operating in. Your branch is up to date with 'origin/main'. Create a new branch with git checkout -b prefix/description. Returns: Switched to a new branch 'prefix/description'. Verify you are in the correct branch with git status. Returns: On branch prefix/description. Add code changes to personal branch git add -A. Create commit and describe changes git commit -m enter description. Double check that your branch is updated with most recent version with git pull origin main. Push changes from local branch to remote branch with git push origin prefix/description. Open GitHub repo in browser. Select Compare and pull request (green). Add descriptive title and comment about changes. Select Create pull request (green). Once pull request has been approved by teammates. LAST STEPS! Confirm there are no conflicts with main and personal branch. Merge Pull Request. Delete personal branch. Open MacOS Terminal. git checkout main to switch back to main branch. git pull origin main to update merge on local device. That's it! These are the basic commands to create a new branch, make changes to code, push changes to remote branch, create a pull request, and merge with main branch. You will use these daily as a developer."
    },
    {
      "title": "HTML 101: A Complete Beginner's Guide",
        "author": "Jenny Yost",
        "description": "What you need to know about HTML as a COMPLETE beginner",
        "blog_content": "Everything You Need to Know About HTML Elements as a Complete Beginner. There's a lot to remember when you're creating your first website from scratch.HTML, an acronym for Hypertext Markup Language provides the structure or skeleton for a website.It tells the browser what the website is about, what text to show on your display, and where the text should go on your screen. I've put together this cheat sheet of basic HTML elements so you can start coding your first website today! After practicing HTML text on your own you'll have these elements committed to memory in no time. What is an element? An element is a label that communicates what type of content to display. Types of elements and examples include: Text elements <p> Image elements <img> Heading elements <h1>, <h2>, <h3>Insert text here</h3> Head elements <head> Body elements <body> Title elements <title>Insert text here</title> List elements (Ordered and unordered) <li>insert one list item</li> Section elements <section class=card id=name-section /> Metadata elements <meta charset=UTF-8 /> (read more about metadata below). Style element <style>. Base element <base>. An element starts with an opening tag signaled by <, then the element label (i.e. head), and ends with a closing tag signaled by a > (i.e. <head>). Information related to the element goes after the element tag and is followed by a set of angle brackets with a slash </>."
    }
]